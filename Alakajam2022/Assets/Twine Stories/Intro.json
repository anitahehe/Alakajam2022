
<html>
	<head>
        <meta http-equiv='Content-Type' content='text/html; charset=UTF-8' />
		<title>Harlowe To JSON</title>
        <script type='text/javascript'>
            /**
* Twine To JSON
*
* Copyright (c) 2020 Jonathan Schoonhoven
*
* Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
* associated documentation files (the 'Software'), to deal in the Software without restriction,
* including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
* and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
* subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all copies or substantial
* portions of the Software.
*
* THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
* LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
* SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

const STORY_TAG_NAME = 'tw-storydata';
const PASSAGE_TAG_NAME = 'tw-passagedata';
const FORMAT_TWINE = 'twine';
const FORMAT_HARLOWE_3 = 'harlowe-3';
const VALID_FORMATS = [FORMAT_TWINE, FORMAT_HARLOWE_3];


/**
 * Convert Twine story to JSON.
 */
function twineToJSON(format) {
    const storyElement = document.getElementsByTagName(STORY_TAG_NAME)[0];
    const storyMeta = getElementAttributes(storyElement);
    const result = {
        uuid: storyMeta.ifid,
        name: storyMeta.name,
        creator: storyMeta.creator,
        creatorVersion: storyMeta['creator-version'],
        schemaName: storyMeta.format,
        schemaVersion: storyMeta['format-version'],
        createdAtMs: Date.now(),
    };
    validate(format);
    const passageElements = Array.from(storyElement.getElementsByTagName(PASSAGE_TAG_NAME));
    result.passages = passageElements.map((passageElement) => {
        return processPassageElement(passageElement, format);
    });
    return result;
}


/**
 * Validate story and inputs. Currently this only validates the format arg. TODO: make this more robust.
 */
function validate(format) {
    const isValidFormat = VALID_FORMATS.some(validFormat => validFormat === format);
    if (!isValidFormat) {
        throw new Error('Format is not valid.');
    }
}


/**
 * Convert the HTML element for a story passage to JSON.
 */
function processPassageElement(passageElement, format) {
    const passageMeta = getElementAttributes(passageElement);
    const result = {
        name: passageMeta.name,
        tags: passageMeta.tags,
        id: passageMeta.pid,
    };
    result.text = passageElement.innerText.trim();
    Object.assign(result, processPassageText(result.text, format));
    result.cleanText = sanitizeText(result.text, result.links, result.hooks, format);
    return result;
}


function processPassageText(passageText, format) {
    const result = { links: [] };
    if (format === FORMAT_HARLOWE_3) {
        result.hooks = [];
    }
    let currentIndex = 0;
    while (currentIndex < passageText.length) {
        const maybeLink = extractLinksAtIndex(passageText, currentIndex);
        if (maybeLink) {
            result.links.push(maybeLink);
            currentIndex += maybeLink.original.length;
        }
        if (format !== FORMAT_HARLOWE_3) {
            currentIndex += 1;
            continue;
        }
        const maybeLeftHook = extractLeftHooksAtIndex(passageText, currentIndex);
        if (maybeLeftHook) {
            result.hooks.push(maybeLeftHook);
            currentIndex += maybeLeftHook.original.length;
        }
        currentIndex += 1;
        const maybeHook = extractHooksAtIndex(passageText, currentIndex);
        if (maybeHook) {
            result.hooks.push(maybeHook);
            currentIndex += maybeHook.original.length;
        }
    }
    return result;
}


function extractLinksAtIndex(passageText, currentIndex) {
    const currentChar = passageText[currentIndex];
    const nextChar = passageText[currentIndex + 1];
    if (currentChar === '[' && nextChar === '[') {
        const link = getSubstringBetweenBrackets(passageText, currentIndex + 1);
        const leftSplit = link.split('<-', 2);
        const rightSplit = link.split('->', 2);
        const original = passageText.substring(currentIndex, currentIndex + link.length + 4);
        if (leftSplit.length === 2) {
            return { linkText: leftSplit[1].trim(), passageName: leftSplit[0].trim(), original: original };
        }
        else if (rightSplit.length === 2) {
            return { linkText: rightSplit[0].trim(), passageName: rightSplit[1].trim(), original: original };
        }
        else {
            return { linkText: link.trim(), passageName: link.trim(), original: original };
        }
    }
}


function extractLeftHooksAtIndex(passageText, currentIndex) {
    const regexAlphaNum = /[a-z0-9]+/i;
    const currentChar = passageText[currentIndex];
    if (currentChar === '|') {
        const maybeHookName = getSubstringBetweenBrackets(passageText, currentIndex, '|', '>');
        if (maybeHookName.match(regexAlphaNum)) {
            const hookStartIndex = currentIndex + maybeHookName.length + 2; // advance to next char after ">"
            const hookStartChar = passageText[hookStartIndex];
            if (hookStartChar === '[') {
                const hookText = getSubstringBetweenBrackets(passageText, hookStartIndex);
                const hookEndIndex = hookStartIndex + hookText.length + 2;
                const original = passageText.substring(currentIndex, hookEndIndex);
                return { hookName: maybeHookName, hookText: hookText, original: original };
            }
        }
    }
}


function extractHooksAtIndex(passageText, currentIndex) {
    const regexAlphaNum = /[a-z0-9]+/i;
    const currentChar = passageText[currentIndex];
    const nextChar = passageText[currentIndex + 1];
    const prevChar = currentIndex && passageText[currentIndex - 1];
    if (currentChar === '[' && nextChar !== '[' && prevChar !== '[') {
        const hookText = getSubstringBetweenBrackets(passageText, currentIndex);
        const hookEndIndex = currentIndex + hookText.length + 2;
        const hookEndChar = passageText[hookEndIndex];
        if (hookEndChar === '<') {
            const maybeHookName = getSubstringBetweenBrackets(passageText, hookEndIndex, '<', '|');
            if (maybeHookName.match(regexAlphaNum)) {
                const original = passageText.substring(currentIndex, hookEndIndex + maybeHookName.length + 2);
                return { hookName: maybeHookName, hookText: hookText, original: original };
            }
        }
        const original = passageText.substring(currentIndex, hookText.length + 2);
        return { hookName: undefined, hookText: hookText, original: original };
    }
}


function sanitizeText(passageText, links, hooks, format) {
    links.forEach((link) => {
        passageText = passageText.replace(link.original, '');
    });
    if (format === FORMAT_HARLOWE_3) {
        hooks.forEach((hook) => {
            passageText = passageText.replace(hook.original, '');
        });
    }
    return passageText.trim();
}


/**
 * Convert an HTML element to an object of attribute values.
 */
function getElementAttributes(element) {
    const result = {};
    const attributes = Array.from(element.attributes);
    attributes.forEach((attribute) => {
        result[attribute.name] = attribute.value;
    });
    return result;
}


/**
 * True if string starts with the given substring.
 */
function stringStartsWith(string, startswith) {
    return string.trim().substring(0, startswith.length) === startswith;
}


function getSubstringBetweenBrackets(string, startIndex, openBracket, closeBracket) {
    openBracket = openBracket || '[';
    closeBracket = closeBracket || ']';
    const bracketStack = [];
    let currentIndex = startIndex || 0;
    let substring = '';
    if (string[currentIndex] !== openBracket) {
        throw new Error('startIndex of getSubstringBetweenBrackets must correspond to an open bracket');
    }
    while (currentIndex < string.length) {
        const currentChar = string[currentIndex];
        // pull top bracket from stack if we hit a close bracket
        if (currentChar === closeBracket) {
            bracketStack.pop();
        }
        // build substring so long as stack is populated
        if (bracketStack.length) {
            substring += currentChar;
        }
        // add open brackets to the top of the stack
        if (currentChar === openBracket) {
            bracketStack.push(currentChar);
        }
        // return if stack is empty and substring is set
        if (!bracketStack.length) {
            return substring;
        }
        currentIndex += 1;
    }
    return substring;
}

        </script>
	</head>
	<body>
        <pre id='content'></pre>
        <div id='storyData' style='display: none;'><tw-storydata name="Intro" startnode="1" creator="Twine" creator-version="2.5.1" format="Twine to JSON" format-version="0.0.6" ifid="afb735a7-986c-40dc-ad4c-ac6b99ec5e75" options="" tags="" zoom="1" hidden><style role="stylesheet" id="twine-user-stylesheet" type="text/twine-css"></style><script role="script" id="twine-user-script" type="text/twine-javascript"></script><tw-passagedata pid="1" name="Intro" tags="" position="625,250" size="100,100">NARRATION

Have ye&#39; mates heard the tale of the (text-colour:red)[Capâ€™n Cormorant] and his Crafty Corsairs? 

[[Boop -&gt;Intro 2]]


</tw-passagedata><tw-passagedata pid="2" name="Intro 2" tags="" position="750,250" size="100,100">NARRATION

Aye, I can see it on yer face, you haven&#39;t the foggiest what an ol&#39; salty sea dog like me is barking on about. 

[[Boop-&gt;Intro 3]]</tw-passagedata><tw-passagedata pid="3" name="First Encounter (FE)" tags="" position="975,250" size="100,100">NARRATION

The last line is cast for the day. You enjoy the gentle sway of your boat as you take in another deep breath of the crisp sea air.

[[BOOP-&gt;FE 1]]</tw-passagedata><tw-passagedata pid="4" name="FE 2" tags="" position="1325,225" size="100,100">NARRATION

The gas is starting to coalesce into misty tendrils and the light begins to pulse in feint rythem almost like a heart beat.

The key begins to glow....

[[Wait and watch -&gt;FE 3A]]
[[Throw the key into the ocean -&gt;FE 3B]]</tw-passagedata><tw-passagedata pid="5" name="FE 3A" tags="" position="1250,375" size="100,100">NARRATION

The spectral and etheral ooze keeps seeping out of the key until the mist forms an incorporeal man.  

You hear faint whispers and groans of terror.

&quot;Er, who are you?&quot; You begin to ask.

[[Er, who are you?-&gt;FE 4]]</tw-passagedata><tw-passagedata pid="6" name="FE 3B" tags="" position="1375,375" size="100,100">NARRATION

You hear a satisfying glub as the bottle sinks back into the ocean, but a green light glows brighter in it&#39;s wake and the water begins to boil as if it were growling at you.


[[BOOP-&gt;FE 3B.1]]</tw-passagedata><tw-passagedata pid="7" name="FE 4" tags="" position="1275,750" size="100,100">NARRATION

Before you can finish your inquiry, what you begin to realize is a ghost interrupts you.

[[BOOP -&gt;FE 4.1]]



</tw-passagedata><tw-passagedata pid="8" name="FE 5" tags="" position="1675,200" size="100,100">NARRATION

The Captain leans in toward you raising one boney hand upward and closing it in a fist. His skeletel jaw clenches. You find yourself reluctently in agreement with his terms.

[[I have some questions first.... -&gt;FE 5Q]]

[[Aye, Aye, Captain! (Begin Sailing)-&gt;FE 6]]</tw-passagedata><tw-passagedata pid="9" name="FE 5Q" tags="" position="1700,450" size="100,100">NO QUESTIONS RIGHT NOW - SORRY!</tw-passagedata><tw-passagedata pid="10" name="FE 6" tags="" position="1875,450" size="100,100">NARRATION

You set sail for your next destination - heading deeper into the dreaded isles. </tw-passagedata><tw-passagedata pid="11" name="Intro 3" tags="" position="750,375" size="100,100">NARRATION

Since we got some time before the morning shift wakes, let me regale you with the tale of how the fearsome Scarlet Siren and her cap&#39;n and crew perished.

[[BOOP-&gt;Intro 4]]</tw-passagedata><tw-passagedata pid="12" name="Intro 4" tags="" position="750,500" size="100,100">NARRATION

Our story begins on a clear evening just like this where a lone fisher was out at sea....

[[BOOP-&gt;First Encounter (FE)]]</tw-passagedata><tw-passagedata pid="13" name="FE 1" tags="" position="975,375" size="100,100">NARRATION

During your exhale, you enjoy the bright red sunset as it gently sets toward the horizon. Youâ€™re reminded of the vibrant coral back home. 

[[BOOP-&gt;FE 1.1]]</tw-passagedata><tw-passagedata pid="14" name="FE 1.1" tags="" position="975,500" size="100,100">NARRATION

Suddenly, you feel a tug on your line and your mind snaps back to the present. 

You lick your lips as another fish will soon be yours!

[[BOOP-&gt;FE 1.2]]</tw-passagedata><tw-passagedata pid="15" name="FE 1.2" tags="" position="975,625" size="100,100">NARRATION

You begin to reel and to your surprise you&#39;re met with stiff resistence. 

You have no doubt in your mind this is a larger fish, a sturgen perhaps? 

[[BOOP-&gt;FE 1.3]]</tw-passagedata><tw-passagedata pid="16" name="FE 1.3" tags="" position="975,750" size="100,100">NARRATION

You continue to reel and your biceps ache while you exert yourself.

With all this effort you think you may even have a tuna on the line!

[[BOOP-&gt;FE 1.4]]</tw-passagedata><tw-passagedata pid="17" name="FE 1.4" tags="" position="975,875" size="100,100">NARRATION

As your line nears the boat your mind &amp; body are warring with the thought of eating this catch and forgoing the profit. 

[[I think I&#39;ll eat the fish -&gt;FE 1.5A]]
[[I need to sell this fish -&gt;FE 1.5B]]</tw-passagedata><tw-passagedata pid="18" name="FE 1.6" tags="" position="975,1125" size="100,100">NARRATION

...a ball of kelp. 

You begin to deflate as dissapointment washes over your body and mind.

[[BOOP-&gt;FE 1.7]]
</tw-passagedata><tw-passagedata pid="19" name="FE 1.7" tags="" position="975,1250" size="100,100">NARRATION

You notice a thud and heft as the kelp is lowered to the deck of your raft. 

There is a glint of scarlet as you notice the reflection of something glassing from within.

[[BOOP-&gt;FE 1.8]]</tw-passagedata><tw-passagedata pid="20" name="FE 1.8" tags="" position="975,1375" size="100,100">NARRATION

You stick within the slimy tangled knot of kelp and your nose is filled with the aurma of brine and earth. 

After some digging your emerges a bottle that rattles in your hand as you untangle it. 

[[BOOP-&gt;FE 1.9]]</tw-passagedata><tw-passagedata pid="21" name="FE 1.9" tags="" position="975,1500" size="100,100">NARRATION

You peer inside the bottle and notice a roll of paper and determine the noise is coming from a corroded key inside the paper. 

You pop-off the cork in the bottle and notice faint blueish green gas seeping out.

[[BOOP-&gt;FE 2]]</tw-passagedata><tw-passagedata pid="22" name="FE 4.1" tags="" position="1275,925" size="100,100">CAPTAIN

Avast ye&#39; scallywag!  Yer to sail me right to Skull island immediately. This ship here is now commandeered by your&#39;s truly, savvy? 


[[Stay Silent -&gt;FE 4.2A]]
[[Try to form a response -&gt;FE 4.2B]]
</tw-passagedata><tw-passagedata pid="23" name="FE 1.5A" tags="" position="1100,1000" size="100,100">NARRATION

You can always catch another fish to sell tomorrow and your mouth salivates while your stomach as it antipates it&#39;s next delicious meal.

You can see the catch emerge from the glistening amber waters and it&#39;s... 

[[BOOP-&gt;FE 1.6]]</tw-passagedata><tw-passagedata pid="24" name="FE 1.5B" tags="" position="850,1000" size="100,100">NARRATION

Despite really needing the money and mustering up the resistence, you know which is winning as your stomach growls in defiance. 

You can see the catch emerge from the glistening amber waters and it&#39;s... 

[[BOOP-&gt;FE 1.6]]</tw-passagedata><tw-passagedata pid="25" name="FE 3B.1" tags="" position="1375,500" size="100,100">NARRATION

The boiling reaches a climax as a bright light errupts from it and heads towards your boat. You close your eyes in fear and you begin to scream in terror. 

[[BOOP -&gt;FE 3B.2]]</tw-passagedata><tw-passagedata pid="26" name="FE 3B.2" tags="" position="1375,625" size="100,100">When you re-open your eyes you see an incorporeal man, a ghost, sitting across from you on your raft, and notice the bottle is back on the deck of your ship. 

&quot;Er, who are you?&quot; You begin to ask.

[[Er, who are you?-&gt;FE 4]]</tw-passagedata><tw-passagedata pid="27" name="FE 4.2A" tags="" position="1400,1050" size="100,100">NARRATION

You stare right into the empty sockets of this ethereal Captain, he looks entirely indifferent to you. You are utterly frozen in fear, your mouth agape. 

[[BOOP-&gt;FE 4.3]]

</tw-passagedata><tw-passagedata pid="28" name="FE 4.2B" tags="" position="1275,1050" size="100,100">NARRATION

You stare right into the empty sockets of this ethereal Captain, he looks entirely indifferent to you.  You are jumbling and stuttering your words in fear, you give up.

[[BOOP-&gt;FE 4.3]]</tw-passagedata><tw-passagedata pid="29" name="FE 4.3" tags="" position="1325,1200" size="100,100">CAPTAIN 

Quit being lily-livered and weigh anchor immedately! We need to get to my horde o&#39; booty before those mutinious bilge-suckers do! 

[[BOOP-&gt;FE 4.4]]</tw-passagedata><tw-passagedata pid="30" name="FE 4.4" tags="" position="1325,1500" size="100,100">CAPTAIN 

If you don&#39;t comply with me orders - I will keelhaul ye across the deep. You don&#39;t realize how dark and cold it is down there.

[[BOOP-&gt;FE 5]]

</tw-passagedata></tw-storydata></div>
        <script type='text/javascript'>document.getElementById('content').innerHTML = JSON.stringify(twineToJSON("twine"), null, 2);</script>
	</body>
</html>
